---
description: Convention d’organisation des fichiers et configuration CSS-first avec Tailwind CSS v4 dans une application React modulaire
globs: src/**/*, src/styles/**
alwaysApply: true
---

# Rule 6.1 – Structure des fichiers et CSS-first (Tailwind v4)

## Objectif

Adopter une structure de projet claire, modulaire et compatible avec la philosophie **CSS-first** de Tailwind CSS v4. Centraliser le design system dans le CSS, limiter la dépendance à la config JS, et faciliter la maintenance à grande échelle.

## Technologies concernées

- React (Vite ou Next)
- Tailwind CSS v4+
- Supabase
- ShadCN/UI
- React Query

## Arborescence recommandée

```txt
src/
  components/         # Composants UI réutilisables
    ui/               # Composants ShadCN (ou étendus)
    layout/           # Header, Sidebar, AppShell...
    planner/          # Composants métiers
  pages/              # Pages principales (si Vite)
  routes/             # Routes (React Router, Next.js…)
  hooks/              # Hooks métiers (useGuests, useAuth…)
  lib/                # Fonctions utilitaires (supabase, cn, queryKeys…)
  context/            # Contexte React (auth, thème…)
  types/              # Types globaux
  styles/             # CSS-first : tokens, base, composants
    tokens.css        # Design tokens déclarés via @layer tokens
    index.css         # Point d’entrée CSS (import tokens + @tailwind)
.env.example          # Variables d’environnement
```

## Contenu recommandé du fichier `styles/tokens.css`

```css
@layer tokens {
  :root {
    --color-background: #fffdf8;
    --color-ink: #111827;
    --color-accent: #c04a3a;

    --radius-sm: 4px;
    --radius-lg: 12px;

    --font-sans: 'Inter', sans-serif;
    --font-display: 'Playfair Display', serif;
  }
}
```

## Point d’entrée CSS : `styles/index.css`

```css
@import "tailwindcss"
@import "./tokens.css";
```

Et dans `main.tsx` :

```ts
import "@/styles/index.css";
```

## Utilisation dans le JSX

```tsx
<div className="bg-[--color-background] rounded-[--radius-lg] text-[--color-accent]">
  Composant avec tokens CSS
</div>
```

## Bonnes pratiques

- Ne jamais déclarer de couleur directement dans le JSX (pas de `text-[#000]`, `bg-red-500`, etc.)
- Centraliser toutes les variables dans `tokens.css`
- Si un token manque → l’ajouter dans le CSS, pas le contourner avec du `style={{ ... }}`
- Utiliser `@layer tokens` uniquement dans `tokens.css`, jamais dans d’autres fichiers

## Règle d’or

Avec Tailwind v4, **le CSS est la source de vérité**.  
Le design system ne vit plus dans la config JS, il vit dans `tokens.css`, et c’est lui qui dicte le code.
