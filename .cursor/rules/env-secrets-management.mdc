---
description: Convention de gestion des variables d’environnement et des clés Supabase dans une application React + Supabase
globs: .env*, supabase/.env*, src/lib/supabase.ts
alwaysApply: true
---

# Rule 4.4 – Gestion des fichiers `.env` et des secrets Supabase (env-secrets-management)

## Objectif

Sécuriser et structurer l’usage des variables d’environnement dans l’application. Éviter les fuites de données sensibles et garantir une bonne distinction entre clés publiques (client) et privées (server/admin).

## Technologies concernées

- Supabase
- Vite
- React
- Supabase Auth & API
- `.env`, `.env.local`, `.env.production`, etc.

## Principes

- Toutes les variables d’environnement **commencent par `VITE_`** pour être accessibles dans le frontend (Vite).
- Les clés Supabase doivent être différenciées :
  - `SUPABASE_URL`
  - `SUPABASE_ANON_KEY` → utilisée côté client uniquement
  - `SUPABASE_SERVICE_ROLE_KEY` → **jamais utilisée dans le client** (admin seulement côté backend/serverless)
- Ne jamais hardcoder une URL Supabase ou une clé dans le code JSX/TSX.
- Les fichiers `.env*` doivent être **gitignorés** sauf `.env.example`.

## Exemple de `.env.example`

```env
VITE_SUPABASE_URL=https://xyzcompany.supabase.co
VITE_SUPABASE_ANON_KEY=your-anon-key-here
```

## Exemple – Fichier `lib/supabase.ts`

```ts
import { createClient } from "@supabase/supabase-js";

export const supabase = createClient(
  import.meta.env.VITE_SUPABASE_URL!,
  import.meta.env.VITE_SUPABASE_ANON_KEY!
);
```

## Bonnes pratiques

- Toujours versionner un fichier `.env.example` avec les clés requises non sensibles
- Ne jamais logger ou afficher une clé en erreur ou dans une console (prod ou dev)
- Utiliser des noms cohérents (`VITE_API_URL`, `VITE_STRIPE_PUBLIC_KEY`, etc.)
- Séparer les environnements :
  - `.env.local` → dev personnel
  - `.env.production` → build de prod
  - `.env.staging` → staging s’il existe

## À éviter

```ts
// ⛔ Hardcoded key
const supabase = createClient("https://xyz.supabase.co", "eyJhbGci...");

// ⛔ Clé admin exposée dans un repo
VITE_SUPABASE_SERVICE_ROLE_KEY=xxx
```

## Règle d’or

Si une variable est sensible, elle ne doit **jamais apparaître dans le code**, le Git ou les logs.  
Si elle est publique, elle doit **être nommée explicitement** et documentée dans `.env.example`.
