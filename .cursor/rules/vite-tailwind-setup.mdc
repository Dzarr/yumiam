---
description: Setup initial Vite + Tailwind CSS v4 avec configuration CSS-first et intégration ShadCN/UI
globs: vite.config.ts, tailwind.config.js, postcss.config.js, src/styles/**
alwaysApply: true
---

# Rule 6.2 – Setup initial avec Vite + Tailwind CSS v4 (vite-tailwind-setup)

## Objectif

Mettre en place une base de projet React moderne, évolutive et maintenable dès le jour 1, en suivant les principes **CSS-first** de Tailwind CSS v4. Préparer l'intégration du design system via tokens CSS, l’ajout de ShadCN, et une DX rapide avec Vite.

## Technologies concernées

- Vite
- React
- Tailwind CSS v4+
- PostCSS
- ShadCN/UI

---

## Étapes de setup recommandées

### 1. Initialiser le projet

```bash
npm create vite@latest my-app -- --template react-ts
cd my-app
npm install
```

### 2. Installer TailwindCSS

```bash
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
```

### 3. Configurer Tailwind (tailwind.config.js)

```js
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./index.html",
    "./src/**/*.{ts,tsx}"
  ],
  theme: {
    extend: {}
  },
  plugins: []
};
```

---

## 4. Créer l’architecture CSS-first

```txt
src/
  styles/
    tokens.css      # Design tokens CSS (via @layer)
    index.css       # Entrée CSS : import des tokens + Tailwind layers
```

### `src/styles/tokens.css`

```css
@layer tokens {
  :root {
    --color-background: #fffdf8;
    --color-ink: #111;
    --radius-sm: 4px;
    --font-sans: 'Inter', sans-serif;
  }
}
```

### `src/styles/index.css`

```css
@import "./tokens.css";

@tailwind base;
@tailwind components;
@tailwind utilities;
```

Et dans `main.tsx` :

```ts
import "@/styles/index.css";
```

---

## 5. Ajouter ShadCN/UI (optionnel mais recommandé)

```bash
npx shadcn-ui@latest init
```

---

## Bonnes pratiques

- Toujours versionner `tailwind.config.js`, `postcss.config.js` et `tokens.css`
- Ne jamais écrire de couleur/radius/typographie inline – tout passe par les tokens CSS
- Prévoir les alias dans `vite.config.ts` :

```ts
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import path from "path";

export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "./src")
    }
  }
});
```

---

## Règle d’or

**Tailwind CSS v4 = CSS-first.**  
On installe proprement, on centralise les tokens dans le CSS,  et on ne touche plus aux couleurs à la main dans le JSX.
