---
description: Convention d’utilisation d’un design system CSS-first avec Tailwind CSS v4 (naming, couleurs, typographies, tokens)
globs: src/styles/tokens.css, src/**/*.{tsx,jsx}
alwaysApply: true
---

# Rule 1.3 – Design System avec Tailwind CSS v4 (tailwind-design-system)

## Objectif

Construire un design system centralisé, lisible et scalable, en utilisant les capacités **CSS-first** de Tailwind v4 : les variables CSS personnalisées (tokens), les `@layer`, et les utilitaires dynamiques.

## Technologies concernées

- Tailwind CSS v4+
- React (TSX/JSX)
- ShadCN/UI
- CSS Custom Properties (`--token`)
- tokens.css

## Principes

- Toutes les couleurs, radius, tailles, typographies, z-index, etc. sont **définies dans un fichier `tokens.css` unique** via `@layer tokens`
- Les noms de tokens sont **fonctionnels** et **abstraits** (`--color-ink`, `--radius-lg`, `--font-display`) : jamais de couleur ou taille directe (`--blue`, `--12px`)
- On consomme les tokens via les classes Tailwind dynamiques : `bg-[--color-background]`, `rounded-[--radius-sm]`, etc.
- Aucun style direct (`style={{ }}`), couleur hexadécimale (`#fff`) ou classe brute (`text-red-500`) n’est autorisé dans le JSX

## Exemple – `/styles/tokens.css`

```css
@layer tokens {
  :root {
    --color-background: #fffdf8;
    --color-ink: #1a1a1a;
    --color-accent: #c04a3a;
    --color-border: #eaeaea;

    --radius-sm: 4px;
    --radius-lg: 12px;

    --font-sans: 'Inter', sans-serif;
    --font-display: 'Playfair Display', serif;

    --z-base: 0;
    --z-modal: 40;
    --z-toast: 50;
  }
}
```

## Exemple – Utilisation dans le JSX

```tsx
<div className="bg-[--color-background] text-[--color-ink] rounded-[--radius-lg]">
  Élément respectant le design system
</div>

<h1 className="font-[--font-display] text-3xl">Titre principal</h1>
```

## ❌ À éviter

```tsx
<p className="text-red-500">Non standardisé</p>
<p style={{ color: "#C04A3A" }}>Inline style → interdit</p>
```

## Bonnes pratiques

- **Un seul fichier `tokens.css`** centralise le design system (pas de `theme.colors` dans `tailwind.config.js`)
- Toujours utiliser des noms sémantiques, jamais visuels (`--color-success`, pas `--green`)
- Si un token est manquant, l’ajouter **dans `tokens.css`**, jamais contourné dans le JSX
- Les tokens doivent être documentés (ex : via commentaire dans `tokens.css` ou `design-tokens.md`)
- Tous les composants doivent utiliser exclusivement les tokens pour les couleurs, fonts, radius, etc.

## Règle d’or

- Le design system est **CSS-first**.  
- Chaque propriété visuelle (couleur, typographie, radius…) vient d’un token.  
- Pas de raccourci. Pas de valeur magique. Pas d’exception visuelle.
